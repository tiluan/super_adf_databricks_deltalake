{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "adftreinamentoudemy"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/df_transforma_produto')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "file_vendas",
								"type": "DatasetReference"
							},
							"name": "filevendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_venda as string,",
						"          cod_cliente as string,",
						"          nom_cliente as string,",
						"          cod_vendedor as string,",
						"          nom_vendedor as string,",
						"          cod_cidade as string,",
						"          nom_cidade as string,",
						"          cod_produto as string,",
						"          Nom_produto as string,",
						"          cod_marca as string,",
						"          Nom_marca as string,",
						"          cod_departamento as string,",
						"          nom_departamento as string,",
						"          cod_gerencia as string,",
						"          nom_gerencia as string,",
						"          Ano_venda as string,",
						"          {Mês_venda} as string,",
						"          Dia_venda as string,",
						"          dtc_venda as string,",
						"          qtd_venda as string,",
						"          val_venda as string,",
						"          num_nota as string,",
						"          Latitude as string,",
						"          Longitude as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> filevendas",
						"filevendas select(mapColumn(",
						"          idproduto = cod_produto,",
						"          nomeproduto = Nom_produto,",
						"          nomecategoria = nom_departamento",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 aggregate(groupBy(idproduto,",
						"          nomeproduto,",
						"          nomecategoria),",
						"     idprodutoagg = first(idproduto)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['fileproduto.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          idproduto,",
						"          nomeproduto,",
						"          nomecategoria",
						"     ),",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transforma_venda')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "vendas_sem_cliente",
								"type": "DatasetReference"
							},
							"name": "vendassemclietne"
						},
						{
							"dataset": {
								"referenceName": "vendas_cliente",
								"type": "DatasetReference"
							},
							"name": "vendascliente"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "filevendasfinal"
						}
					],
					"transformations": [
						{
							"name": "filevendas"
						},
						{
							"name": "join1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_venda as string,",
						"          cod_vendedor as string,",
						"          nom_vendedor as string,",
						"          cod_produto as string,",
						"          Nom_produto as string,",
						"          cod_marca as string,",
						"          Nom_marca as string,",
						"          cod_departamento as string,",
						"          nom_departamento as string,",
						"          cod_gerencia as string,",
						"          nom_gerencia as string,",
						"          Ano_venda as string,",
						"          {M�s_venda} as string,",
						"          Dia_venda as string,",
						"          dtc_venda as string,",
						"          qtd_venda as string,",
						"          val_venda as string,",
						"          num_nota as string,",
						"          Latitude as string,",
						"          Longitude as string,",
						"          nom_cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> vendassemclietne",
						"source(output(",
						"          id_venda as string,",
						"          cod_cliente as string,",
						"          cod_cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> vendascliente",
						"vendassemclietne select(mapColumn(",
						"          id_venda,",
						"          cod_produto,",
						"          qtd_venda,",
						"          val_venda",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> filevendas",
						"filevendas, vendascliente join(filevendas@id_venda == vendascliente@id_venda,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          idvenda = filevendas@id_venda,",
						"          idproduto = cod_produto,",
						"          quantidade = qtd_venda,",
						"          valor_total = val_venda,",
						"          idcliente = cod_cliente",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['filevendasfinal.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> filevendasfinal"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_union')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "vendasano"
						},
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "vendamesano"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Ano_venda as short,",
						"          val_venda_ano as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['vendaaggano.csv']) ~> vendasano",
						"source(output(",
						"          Ano_venda as short,",
						"          {Mês_venda} as short,",
						"          val_venda_mes_ano as double,",
						"          rankTopVenda as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['vendaaggmesano.csv']) ~> vendamesano",
						"vendamesano select(mapColumn(",
						"          Ano_venda,",
						"          val_venda_ano = val_venda_mes_ano",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"vendasano, select1 union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['exemplo_union.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_Atividade_Agg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Criar uma pipeline com um fluxo de dados que utiliza o arquivo de vendas com os seguintes campos:\n\nNom_produto, Ano_venda, Mes_venda, Dia_venda, dtc_venda, qtd_venda, val_venda\n\nGerar um arquivo vendasDIA.csv que represente a MÉDIA QUANTIDATIVA por dia e nome_produto",
				"activities": [
					{
						"name": "df_atividade_agg",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_atividade_agg",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"VendasDiafile": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Atividades"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_Atividade_Juncao')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Criar um pipeline com um fluxo de dados que utiliza o arquivo vendas.csv e cliente_cargo.csv\n\nAo final da pipeline gerar um arquivo chamado vendasClienteCargo.csv\n\nNom_cliente, Cargo, Nom_produto, Ano_venda, Mes_venda, Dia_venda, dtc_venda, qtd_venda, val_venda",
				"activities": [
					{
						"name": "df_VendaClientesCargo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_atividade_juncao",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendas": {},
									"clienteCargo": {},
									"vendasClienteCargo": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Atividades"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_ExemploAggClassif')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_AGGExemplo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_agg_vendas_ano",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendas": {},
									"filevendaaggano": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_uniao",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_AGGExemplo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_union",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendasano": {},
									"vendamesano": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_div_condicional",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_uniao",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_div_vendas_20142015",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendasagg20142015": {},
									"saida2014": {},
									"vendas2015": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Exemplos"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_union')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_ExemploCopyData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopiarDadosNotaFiscal",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TransformaDados",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "nom_cliente",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nom_cliente",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "nom_vendedor",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nom_vendedor",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "nom_cidade",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nom_cidade",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "file_vendas",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "file_vendas_mod",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TransformaDados",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_cliente",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendas": {},
									"filecliente": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Exemplos"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_ExemploJuncao')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExemploJuncao",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dadosClienteComp",
								"type": "DataFlowReference",
								"parameters": {
									"p_numLote": {
										"value": "'@{pipeline().parameters.numlote}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"vendasmod": {},
									"vendas": {},
									"vendasclientecomp": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"numlote": {
						"type": "string",
						"defaultValue": "5"
					}
				},
				"folder": {
					"name": "Exemplos"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_carga_cliente')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_transf_cliente",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transforma_cliente",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"filevendas": {},
									"saidacargacliente": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "carga_cliente_bd",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "df_transf_cliente",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "saidacargacliente.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"idcliente"
									]
								},
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_cliente",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "idcliente",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "nomecliente",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nomecliente",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dir_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tbl_cliente",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Projeto"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_carga_produto')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_transf_produto",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transforma_produto",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"filevendas": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "cargaproduto",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "df_transf_produto",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "fileproduto.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"idproduto"
									]
								},
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dir_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tb_produto",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Projeto"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transforma_produto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_carga_vendas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_transf_venda",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transforma_venda",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendassemclietne": {},
									"vendascliente": {},
									"filevendasfinal": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "df_transf_venda",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "filevendasfinal.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"idvenda"
									]
								},
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "idvenda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "idvenda",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "idcliente",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "idcliente",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "idproduto",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "idproduto",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "quantidade",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "quantidade",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "valor_total",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "valor_total",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dir_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tb_venda",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Projeto"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_transforma_venda')]"
			]
		}
	]
}