{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "adftreinamentoudemy"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'AzureBlobStorage1'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'SqlServer1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pip_Atividade_Agg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Criar uma pipeline com um fluxo de dados que utiliza o arquivo de vendas com os seguintes campos:\n\nNom_produto, Ano_venda, Mes_venda, Dia_venda, dtc_venda, qtd_venda, val_venda\n\nGerar um arquivo vendasDIA.csv que represente a MÉDIA QUANTIDATIVA por dia e nome_produto",
				"activities": [
					{
						"name": "df_atividade_agg",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_atividade_agg",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"VendasDiafile": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_atividade_agg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_Atividade_CopyData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Criar uma pipeline \"pip_copydata\" copiando os dados do arquivo vendas.csv copiando os atributos Ano_venda, Mês_venda, Dia_venda, dtc_venda, qtd_venda, val_venda para um arquivo denominado val_vendas.csv",
				"activities": [
					{
						"name": "CopyData_val_vendas",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Ano_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ano_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mês_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mês_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Dia_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dia_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "dtc_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dtc_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "qtd_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qtd_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "val_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "val_venda",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "file_vendas",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "val_vendas",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/file_vendas')]",
				"[concat(variables('factoryId'), '/datasets/val_vendas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_Atividade_Juncao')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Criar um pipeline com um fluxo de dados que utiliza o arquivo vendas.csv e cliente_cargo.csv\n\nAo final da pipeline gerar um arquivo chamado vendasClienteCargo.csv\n\nNom_cliente, Cargo, Nom_produto, Ano_venda, Mes_venda, Dia_venda, dtc_venda, qtd_venda, val_venda",
				"activities": [
					{
						"name": "df_VendaClientesCargo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_atividade_juncao",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendas": {},
									"clienteCargo": {},
									"vendasClienteCargo": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_atividade_juncao')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_ExemploAggClassif')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_AGGExemplo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_agg_vendas_ano",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendas": {},
									"filevendaaggano": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_uniao",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_AGGExemplo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendasano": {},
									"vendamesano": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_div_condicional",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_uniao",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_div_vendas_20142015",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendasagg20142015": {},
									"saida2014": {},
									"vendas2015": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_agg_vendas_ano')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/dataflows/df_div_vendas_20142015')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_ExemploCopyData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopiarDadosNotaFiscal",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TransformaDados",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "nom_cliente",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nom_cliente",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "nom_vendedor",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nom_vendedor",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "nom_cidade",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nom_cidade",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "file_vendas",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "file_vendas_mod",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TransformaDados",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_cliente",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"vendas": {},
									"filecliente": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/file_vendas')]",
				"[concat(variables('factoryId'), '/datasets/file_vendas_mod')]",
				"[concat(variables('factoryId'), '/dataflows/df_transform_cliente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_ExemploJuncao')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExemploJuncao",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_dadosClienteComp",
								"type": "DataFlowReference",
								"parameters": {
									"p_numLote": {
										"value": "'@{pipeline().parameters.numlote}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"vendasmod": {},
									"vendas": {},
									"vendasclientecomp": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"numlote": {
						"type": "string",
						"defaultValue": "5"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_dadosClienteComp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dir_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "fontes"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/file_vendas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "vendas.csv",
						"container": "fontes"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id_venda",
						"type": "String"
					},
					{
						"name": "cod_cliente",
						"type": "String"
					},
					{
						"name": "nom_cliente",
						"type": "String"
					},
					{
						"name": "cod_vendedor",
						"type": "String"
					},
					{
						"name": "nom_vendedor",
						"type": "String"
					},
					{
						"name": "cod_cidade",
						"type": "String"
					},
					{
						"name": "nom_cidade",
						"type": "String"
					},
					{
						"name": "cod_produto",
						"type": "String"
					},
					{
						"name": "Nom_produto",
						"type": "String"
					},
					{
						"name": "cod_marca",
						"type": "String"
					},
					{
						"name": "Nom_marca",
						"type": "String"
					},
					{
						"name": "cod_departamento",
						"type": "String"
					},
					{
						"name": "nom_departamento",
						"type": "String"
					},
					{
						"name": "cod_gerencia",
						"type": "String"
					},
					{
						"name": "nom_gerencia",
						"type": "String"
					},
					{
						"name": "Ano_venda",
						"type": "String"
					},
					{
						"name": "Mês_venda",
						"type": "String"
					},
					{
						"name": "Dia_venda",
						"type": "String"
					},
					{
						"name": "dtc_venda",
						"type": "String"
					},
					{
						"name": "qtd_venda",
						"type": "String"
					},
					{
						"name": "val_venda",
						"type": "String"
					},
					{
						"name": "num_nota",
						"type": "String"
					},
					{
						"name": "Latitude",
						"type": "String"
					},
					{
						"name": "Longitude",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/file_vendas_mod')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "vendas_mod.csv",
						"container": "fontes"
					},
					"columnDelimiter": ",",
					"encodingName": "WINDOWS-1252",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id_venda",
						"type": "String"
					},
					{
						"name": "nom_cliente",
						"type": "String"
					},
					{
						"name": "nom_vendedor",
						"type": "String"
					},
					{
						"name": "nom_cidade",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tb_cidade')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "idcidade",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nomecidade",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cidade"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tb_produto')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "idproduto",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nomeproduto",
						"type": "varchar"
					},
					{
						"name": "nomecategoria",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "produto"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tb_venda')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "idvenda",
						"type": "int",
						"precision": 10
					},
					{
						"name": "idcliente",
						"type": "int",
						"precision": 10
					},
					{
						"name": "idcidade",
						"type": "int",
						"precision": 10
					},
					{
						"name": "idproduto",
						"type": "int",
						"precision": 10
					},
					{
						"name": "quantidade",
						"type": "int",
						"precision": 10
					},
					{
						"name": "valor_total",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "venda"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tbl_cliente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "idcliente",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nomecliente",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cliente"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/val_vendas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "val_vendas.csv",
						"container": "fontes"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id_venda",
						"type": "String"
					},
					{
						"name": "cod_cliente",
						"type": "String"
					},
					{
						"name": "nom_cliente",
						"type": "String"
					},
					{
						"name": "cod_vendedor",
						"type": "String"
					},
					{
						"name": "nom_vendedor",
						"type": "String"
					},
					{
						"name": "cod_cidade",
						"type": "String"
					},
					{
						"name": "nom_cidade",
						"type": "String"
					},
					{
						"name": "cod_produto",
						"type": "String"
					},
					{
						"name": "Nom_produto",
						"type": "String"
					},
					{
						"name": "cod_marca",
						"type": "String"
					},
					{
						"name": "Nom_marca",
						"type": "String"
					},
					{
						"name": "cod_departamento",
						"type": "String"
					},
					{
						"name": "nom_departamento",
						"type": "String"
					},
					{
						"name": "cod_gerencia",
						"type": "String"
					},
					{
						"name": "nom_gerencia",
						"type": "String"
					},
					{
						"name": "Ano_venda",
						"type": "String"
					},
					{
						"name": "M�s_venda",
						"type": "String"
					},
					{
						"name": "Dia_venda",
						"type": "String"
					},
					{
						"name": "dtc_venda",
						"type": "String"
					},
					{
						"name": "qtd_venda",
						"type": "String"
					},
					{
						"name": "val_venda",
						"type": "String"
					},
					{
						"name": "num_nota",
						"type": "String"
					},
					{
						"name": "Latitude",
						"type": "String"
					},
					{
						"name": "Longitude",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "vendasano"
						},
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "vendamesano"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Ano_venda as short,",
						"          val_venda_ano as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['vendaaggano.csv']) ~> vendasano",
						"source(output(",
						"          Ano_venda as short,",
						"          {Mês_venda} as short,",
						"          val_venda_mes_ano as double,",
						"          rankTopVenda as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['vendaaggmesano.csv']) ~> vendamesano",
						"vendamesano select(mapColumn(",
						"          Ano_venda,",
						"          val_venda_ano = val_venda_mes_ano",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"vendasano, select1 union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['exemplo_union.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dir_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_agg_vendas_ano')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "file_vendas",
								"type": "DatasetReference"
							},
							"name": "vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "filevendaaggano"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "agganovenda"
						},
						{
							"name": "rankVendaMesAno"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_venda as string,",
						"          cod_cliente as string,",
						"          nom_cliente as string,",
						"          cod_vendedor as string,",
						"          nom_vendedor as string,",
						"          cod_cidade as string,",
						"          nom_cidade as string,",
						"          cod_produto as string,",
						"          Nom_produto as string,",
						"          cod_marca as string,",
						"          Nom_marca as string,",
						"          cod_departamento as string,",
						"          nom_departamento as string,",
						"          cod_gerencia as string,",
						"          nom_gerencia as string,",
						"          Ano_venda as string,",
						"          {Mês_venda} as string,",
						"          Dia_venda as string,",
						"          dtc_venda as string,",
						"          qtd_venda as string,",
						"          val_venda as string,",
						"          num_nota as string,",
						"          Latitude as string,",
						"          Longitude as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> vendas",
						"vendas select(mapColumn(",
						"          Ano_venda,",
						"          {Mês_venda},",
						"          val_venda",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 aggregate(groupBy(Ano_venda,",
						"          {Mês_venda}),",
						"     val_venda_mes_ano = sum(toDouble(val_venda))) ~> agganovenda",
						"agganovenda rank(desc(val_venda_mes_ano, true),",
						"     asc({Mês_venda}, true),",
						"     output(rankTopVenda as long)) ~> rankVendaMesAno",
						"rankVendaMesAno sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['vendaaggmesano.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> filevendaaggano"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/file_vendas')]",
				"[concat(variables('factoryId'), '/datasets/dir_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_atividade_agg')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "file_vendas",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "VendasDiafile"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_venda as string,",
						"          cod_cliente as string,",
						"          nom_cliente as string,",
						"          cod_vendedor as string,",
						"          nom_vendedor as string,",
						"          cod_cidade as string,",
						"          nom_cidade as string,",
						"          cod_produto as string,",
						"          Nom_produto as string,",
						"          cod_marca as string,",
						"          Nom_marca as string,",
						"          cod_departamento as string,",
						"          nom_departamento as string,",
						"          cod_gerencia as string,",
						"          nom_gerencia as string,",
						"          Ano_venda as string,",
						"          {Mês_venda} as string,",
						"          Dia_venda as string,",
						"          dtc_venda as string,",
						"          qtd_venda as string,",
						"          val_venda as string,",
						"          num_nota as string,",
						"          Latitude as string,",
						"          Longitude as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          Nom_produto,",
						"          Ano_venda,",
						"          {Mês_venda},",
						"          Dia_venda,",
						"          dtc_venda,",
						"          qtd_venda,",
						"          val_venda",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 aggregate(groupBy(Nom_produto,",
						"          Ano_venda,",
						"          {Mês_venda},",
						"          Dia_venda),",
						"     MEDIA_QUANTITATIVA = avg(toDouble(qtd_venda))) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['vendasDIA.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> VendasDiafile"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/file_vendas')]",
				"[concat(variables('factoryId'), '/datasets/dir_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_atividade_juncao')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "file_vendas",
								"type": "DatasetReference"
							},
							"name": "vendas"
						},
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "clienteCargo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "vendasClienteCargo"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_venda as string,",
						"          cod_cliente as integer,",
						"          nom_cliente as string,",
						"          cod_vendedor as string,",
						"          nom_vendedor as string,",
						"          cod_cidade as string,",
						"          nom_cidade as string,",
						"          cod_produto as string,",
						"          Nom_produto as string,",
						"          cod_marca as string,",
						"          Nom_marca as string,",
						"          cod_departamento as string,",
						"          nom_departamento as string,",
						"          cod_gerencia as string,",
						"          nom_gerencia as string,",
						"          Ano_venda as string,",
						"          {Mês_venda} as string,",
						"          Dia_venda as string,",
						"          dtc_venda as string,",
						"          qtd_venda as string,",
						"          val_venda as string,",
						"          num_nota as string,",
						"          Latitude as string,",
						"          Longitude as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> vendas",
						"source(output(",
						"          idcliente as integer,",
						"          idcargo as short,",
						"          nomecargo as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['/cliente_cargo.csv']) ~> clienteCargo",
						"vendas, clienteCargo join(cod_cliente == idcliente,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          nom_cliente,",
						"          nomecargo,",
						"          Nom_produto,",
						"          Ano_venda,",
						"          {Mês_venda},",
						"          Dia_venda,",
						"          dtc_venda,",
						"          qtd_venda,",
						"          val_venda",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['vendasClienteCargo.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> vendasClienteCargo"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/file_vendas')]",
				"[concat(variables('factoryId'), '/datasets/dir_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_dadosClienteComp')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "file_vendas_mod",
								"type": "DatasetReference"
							},
							"name": "vendasmod"
						},
						{
							"dataset": {
								"referenceName": "file_vendas",
								"type": "DatasetReference"
							},
							"name": "vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "vendasclientecomp"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     p_numLote as string",
						"}",
						"source(output(",
						"          id_venda as string,",
						"          nom_cliente as string,",
						"          nom_vendedor as string,",
						"          nom_cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> vendasmod",
						"source(output(",
						"          id_venda as string,",
						"          cod_cliente as string,",
						"          nom_cliente as string,",
						"          cod_vendedor as string,",
						"          nom_vendedor as string,",
						"          cod_cidade as string,",
						"          nom_cidade as string,",
						"          cod_produto as string,",
						"          Nom_produto as string,",
						"          cod_marca as string,",
						"          Nom_marca as string,",
						"          cod_departamento as string,",
						"          nom_departamento as string,",
						"          cod_gerencia as string,",
						"          nom_gerencia as string,",
						"          Ano_venda as string,",
						"          {Mês_venda} as string,",
						"          Dia_venda as string,",
						"          dtc_venda as string,",
						"          qtd_venda as string,",
						"          val_venda as string,",
						"          num_nota as string,",
						"          Latitude as string,",
						"          Longitude as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> vendas",
						"vendasmod, vendas join(vendasmod@id_venda == vendas@id_venda,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          id_venda = vendasmod@id_venda,",
						"          cod_cliente,",
						"          nom_cliente = vendasmod@nom_cliente,",
						"          cod_vendedor,",
						"          nom_vendedor = vendasmod@nom_vendedor,",
						"          cod_cidade,",
						"          nom_cidade = vendasmod@nom_cidade",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(num_lote = $p_numLote) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['vendasclientecomp.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> vendasclientecomp"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/file_vendas_mod')]",
				"[concat(variables('factoryId'), '/datasets/file_vendas')]",
				"[concat(variables('factoryId'), '/datasets/dir_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_div_vendas_20142015')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "vendasagg20142015"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "saida2014"
						},
						{
							"dataset": {
								"referenceName": "dir_blob",
								"type": "DatasetReference"
							},
							"name": "vendas2015"
						}
					],
					"transformations": [
						{
							"name": "split1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Ano_venda as short,",
						"          val_venda_ano as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['exemplo_union.csv']) ~> vendasagg20142015",
						"vendasagg20142015 split(Ano_venda == 2014,",
						"     disjoint: false) ~> split1@(regra2014, demais)",
						"split1@regra2014 filter(val_venda_ano < 264703) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['vendas_2014.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> saida2014",
						"split1@demais sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['vendas_2015.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> vendas2015"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dir_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_cliente')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "file_vendas",
								"type": "DatasetReference"
							},
							"name": "vendas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "file_vendas_mod",
								"type": "DatasetReference"
							},
							"name": "filecliente"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id_venda as string,",
						"          cod_cliente as string,",
						"          nom_cliente as string,",
						"          cod_vendedor as string,",
						"          nom_vendedor as string,",
						"          cod_cidade as string,",
						"          nom_cidade as string,",
						"          cod_produto as string,",
						"          Nom_produto as string,",
						"          cod_marca as string,",
						"          Nom_marca as string,",
						"          cod_departamento as string,",
						"          nom_departamento as string,",
						"          cod_gerencia as string,",
						"          nom_gerencia as string,",
						"          Ano_venda as string,",
						"          {Mês_venda} as string,",
						"          Dia_venda as string,",
						"          dtc_venda as string,",
						"          qtd_venda as string,",
						"          val_venda as string,",
						"          num_nota as string,",
						"          Latitude as string,",
						"          Longitude as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> vendas",
						"vendas select(mapColumn(",
						"          idcliente = cod_cliente,",
						"          nomecliente = nom_cliente",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(nomeclienteMaiusculo = upper(nomecliente)) ~> derivedColumn1",
						"derivedColumn1 cast(output(",
						"          nomeclienteMaiusculo as string",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id_venda as string,",
						"          nom_cliente as string,",
						"          nom_vendedor as string,",
						"          nom_cidade as string",
						"     ),",
						"     partitionFileNames:['/clientefile.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> filecliente"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/file_vendas')]",
				"[concat(variables('factoryId'), '/datasets/file_vendas_mod')]"
			]
		}
	]
}