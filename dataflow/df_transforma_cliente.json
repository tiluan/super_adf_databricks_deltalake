{
	"name": "df_transforma_cliente",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "file_vendas",
						"type": "DatasetReference"
					},
					"name": "filevendas"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dir_blob",
						"type": "DatasetReference"
					},
					"name": "saidacargacliente"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id_venda as string,",
				"          cod_cliente as string,",
				"          nom_cliente as string,",
				"          cod_vendedor as string,",
				"          nom_vendedor as string,",
				"          cod_cidade as string,",
				"          nom_cidade as string,",
				"          cod_produto as string,",
				"          Nom_produto as string,",
				"          cod_marca as string,",
				"          Nom_marca as string,",
				"          cod_departamento as string,",
				"          nom_departamento as string,",
				"          cod_gerencia as string,",
				"          nom_gerencia as string,",
				"          Ano_venda as string,",
				"          {MÃªs_venda} as string,",
				"          Dia_venda as string,",
				"          dtc_venda as string,",
				"          qtd_venda as string,",
				"          val_venda as string,",
				"          num_nota as string,",
				"          Latitude as string,",
				"          Longitude as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> filevendas",
				"filevendas select(mapColumn(",
				"          id_cliente = cod_cliente,",
				"          nomecliente = nom_cliente",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(nomecliente = upper(nomecliente)) ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(id_cliente,",
				"          nomecliente),",
				"     idclienteagg = first(id_cliente)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['saidacargacliente.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          id_cliente,",
				"          nomecliente",
				"     ),",
				"     partitionBy('hash', 1)) ~> saidacargacliente"
			]
		}
	}
}